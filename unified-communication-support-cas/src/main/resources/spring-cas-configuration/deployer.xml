<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<bean id="authenticationManager"
		class="org.jasig.cas.authentication.AuthenticationManagerImpl">
		<!--
			| This is the List of CredentialToPrincipalResolvers that identify what Principal is trying to authenticate.
			| The AuthenticationManagerImpl considers them in order, finding a CredentialToPrincipalResolver which 
			| supports the presented credentials.
			|
			| AuthenticationManagerImpl uses these resolvers for two purposes.  First, it uses them to identify the Principal
			| attempting to authenticate to CAS /login .  In the default configuration, it is the DefaultCredentialsToPrincipalResolver
			| that fills this role.  If you are using some other kind of credentials than UsernamePasswordCredentials, you will need to replace
			| DefaultCredentialsToPrincipalResolver with a CredentialsToPrincipalResolver that supports the credentials you are
			| using.
			|
			| Second, AuthenticationManagerImpl uses these resolvers to identify a service requesting a proxy granting ticket. 
			| In the default configuration, it is the HttpBasedServiceCredentialsToPrincipalResolver that serves this purpose. 
			| You will need to change this list if you are identifying services by something more or other than their callback URL.
			+-->
		<property name="credentialsToPrincipalResolvers">
			<list>
				<!--
					| UsernamePasswordCredentialsToPrincipalResolver supports the UsernamePasswordCredentials that we use for /login 
					| by default and produces SimplePrincipal instances conveying the username from the credentials.
					| 
					| If you've changed your LoginFormAction to use credentials other than UsernamePasswordCredentials then you will also
					| need to change this bean declaration (or add additional declarations) to declare a CredentialsToPrincipalResolver that supports the
					| Credentials you are using.
					+-->
				<bean class="org.jasig.cas.authentication.principal.UsernamePasswordCredentialsToPrincipalResolver" >
					<property name="attributeRepository" ref="attributeRepository" />
				</bean>
				<!--
					| HttpBasedServiceCredentialsToPrincipalResolver supports HttpBasedCredentials.  It supports the CAS 2.0 approach of
					| authenticating services by SSL callback, extracting the callback URL from the Credentials and representing it as a
					| SimpleService identified by that callback URL.
					|
					| If you are representing services by something more or other than an HTTPS URL whereat they are able to
					| receive a proxy callback, you will need to change this bean declaration (or add additional declarations).
					+-->
				<bean class="org.jasig.cas.authentication.principal.HttpBasedServiceCredentialsToPrincipalResolver" />
				<bean class="org.jasig.cas.support.oauth.authentication.principal.OAuthCredentialsToPrincipalResolver" >
					<property name="attributeRepository" ref="attributeRepository" />
				</bean>
				<bean class="com.ammob.communication.cas.authentication.principal.VidyoCredentialsToPrincipalResolver" >
					<property name="attributeRepository" ref="attributeRepository" />
				</bean>
			</list>
		</property>
		<property name="authenticationHandlers">
			<list>
				<!--| This is the authentication handler that authenticates services by means of callback via SSL, thereby validating
					| a server side SSL certificate.  +-->
				<bean class="org.jasig.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler"
					p:httpClient-ref="httpClient" />
				<bean class="com.ammob.communication.cas.authentication.handler.VidyoAuthenticationHandler" />
				<bean class="org.jasig.cas.support.oauth.authentication.handler.support.OAuthAuthenticationHandler">
					<property name="configuration" ref="oauthConfig" />
				</bean>
				<bean class="org.jasig.cas.adaptors.jdbc.SearchModeSearchDatabaseAuthenticationHandler">
					<property name="tableUsers"><value>t_user</value></property>
					<property name="fieldUser"><value>username</value></property>
					<property name="fieldPassword"><value>password</value></property>
					<property name="dataSource" ref="dataSource"/>
				</bean>
			</list>
		</property>
		<property name="authenticationMetaDataPopulators">
			<list>
				<bean class="org.jasig.cas.authentication.SamlAuthenticationMetaDataPopulator" />
				<bean class="org.jasig.cas.authentication.principal.RememberMeAuthenticationMetaDataPopulator" />
				<bean class="org.jasig.cas.support.oauth.authentication.OAuthAuthenticationMetaDataPopulator" />
			</list>
		</property>
	</bean>
	
	<bean id="userDetailsService" class="org.springframework.security.cas.userdetails.GrantedAuthorityFromAssertionAttributesUserDetailsService" >
	  <constructor-arg>
	     <list>
	         <value>authorities</value>
	     </list>
	  </constructor-arg>
	</bean>
	
	<bean id="attributeRepository"
		class="org.jasig.services.persondir.support.StubPersonAttributeDao">
		<property name="backingMap">
			<map>
				<entry key="uid" value="uid" />
				<entry key="eduPersonAffiliation" value="eduPersonAffiliation" /> 
				<entry key="groupMembership" value="groupMembership" />
			</map>
		</property>
	</bean>
	
	<!-- 
	Sample, in-memory data store for the ServiceRegistry. A real implementation
	would probably want to replace this with the JPA-backed ServiceRegistry DAO
	The name of this bean should remain "serviceRegistryDao".
	 -->
	<bean id="serviceRegistryDao" class="org.jasig.cas.services.InMemoryServiceRegistryDaoImpl">
            <property name="registeredServices">
                <list>
	                <bean class="org.jasig.cas.services.RegisteredServiceImpl">
				        <property name="id" value="0" />
				        <property name="name" value="HTTP" />
				        <property name="description" value="oauth wrapper callback url" />
				        <property name="serviceId" value="${server.prefix}/oauth2.0/callbackAuthorize" />
			      	</bean>
                    <bean class="org.jasig.cas.services.RegexRegisteredService">
                        <property name="id" value="0" />
                        <property name="name" value="HTTP and IMAP" />
                        <property name="description" value="Allows HTTP(S) and IMAP(S) protocols" />
                        <property name="serviceId" value="^(https?|imaps?)://.*" />
                        <property name="evaluationOrder" value="10000001" />
                        <property name="allowedAttributes">
							<list>
								<!-- facebook -->
								<value>name</value>
								<value>first_name</value>
								<value>middle_name</value>
								<value>last_name</value>
								<value>gender</value>
								<value>locale</value>
								<value>languages</value>
								<value>link</value>
								<value>username</value>
								<value>third_party_id</value>
								<value>timezone</value>
								<value>updated_time</value>
								<value>verified</value>
								<value>bio</value>
								<value>birthday</value>
								<value>education</value>
								<value>email</value>
								<value>hometown</value>
								<value>interested_in</value>
								<value>location</value>
								<value>political</value>
								<value>favorite_athletes</value>
								<value>favorite_teams</value>
								<value>quotes</value>
								<value>relationship_status</value>
								<value>religion</value>
								<value>significant_other</value>
								<value>website</value>
								<value>work</value>
								<value>likes</value>
								<value>books</value>
								<value>music</value>
								<value>movies</value>
								<value>friends</value>
								<value>albums</value>
								<value>events</value>
								<value>access_token</value>
								<!-- facebook -->
								<!-- github -->
								<value>company</value>
								<value>following</value>
								<value>blog</value>
								<value>public_repos</value>
								<value>public_gists</value>
								<value>disk_usage</value>
								<value>collaborators</value>
								<value>plan</value>
								<value>owned_private_repos</value>
								<value>total_private_repos</value>
								<value>private_gists</value>
								<value>login</value>
								<value>followers</value>
								<value>created_at</value>
								<value>type</value>
								<value>html_url</value>
								<value>avatar_url</value>
								<value>gravatar_id</value>
								<value>hireable</value>
								<!-- github -->
								<!-- google -->
								<value>profileUrl</value>
								<value>isViewer</value>
								<value>thumbnailUrl</value>
								<value>formatted</value>
								<value>familyName</value>
								<value>givenName</value>
								<value>displayName</value>
								<value>urls</value>
								<value>photos</value>
								<!-- google -->
								<!-- linkedin -->
								<value>first-name</value>
								<value>last-name</value>
								<value>headline</value>
								<value>url</value>
								<!-- linkedin -->
								<!-- twitter -->
								<value>contributors_enabled</value>
								<value>default_profile</value>
								<value>default_profile_image</value>
								<value>description</value>
								<value>favourites_count</value>
								<value>follow_request_sent</value>
								<value>following</value>
								<value>followers_count</value>
								<value>friends_count</value>
								<value>geo_enabled</value>
								<value>is_translator</value>
								<value>lang</value>
								<value>listed_count</value>
								<value>notifications</value>
								<value>profile_background_color</value>
								<value>profile_background_image_url</value>
								<value>profile_background_image_url_https</value>
								<value>profile_background_tile</value>
								<value>profile_image_url</value>
								<value>profile_image_url_https</value>
								<value>profile_link_color</value>
								<value>profile_sidebar_border_color</value>
								<value>profile_sidebar_fill_color</value>
								<value>profile_text_color</value>
								<value>profile_use_background_image</value>
								<value>protected</value>
								<value>screen_name</value>
								<value>show_all_inline_media</value>
								<value>statuses_count</value>
								<value>time_zone</value>
								<value>utc_offset</value>
								<!-- twitter -->
								<!-- yahoo -->
								<value>aboutMe</value>
								<value>addresses</value>
								<value>birthYear</value>
								<value>birthdate</value>
								<value>created</value>
								<value>displayAge</value>
								<value>disclosures</value>
								<value>emails</value>
								<value>image</value>
								<value>interests</value>
								<value>isConnected</value>
								<value>memberSince</value>
								<value>nickname</value>
								<value>timeZone</value>
								<value>updated</value>
								<value>uri</value>
								<!-- yahoo -->
								<!-- cas wrapper -->
								<value>uid</value>
								<value>eduPersonAffiliation</value>
								<value>groupMembership</value>
								<!-- cas wrapper -->
								<!-- windows live -->
								<!-- windows live -->
								<!-- wordpress -->
								<value>display_name</value>
								<value>primary_blog</value>
								<value>avatar_URL</value>
								<value>profile_URL</value>
								<value>links</value>
								<!-- wordpress -->
							</list>
						</property>
                    </bean>
                    <!--
                    Use the following definition instead of the above to further restrict access
                    to services within your domain (including subdomains).
                    Note that example.com must be replaced with the domain you wish to permit.
                    -->
                    <bean class="org.jasig.cas.services.RegexRegisteredService">
                        <property name="id" value="1" />
                        <property name="name" value="HTTP and IMAP on example.com" />
                        <property name="description" value="Allows HTTP(S) and IMAP(S) protocols on example.com" />
                        <property name="serviceId" value="^(https?|imaps?)://([A-Za-z0-9_-]+\.)*example\.com/.*" />
                        <property name="evaluationOrder" value="0" />
                    </bean>
                </list>
            </property>
        </bean>

  <bean id="auditTrailManager" class="com.github.inspektr.audit.support.Slf4jLoggingAuditTrailManager" />
  
  <bean id="healthCheckMonitor" class="org.jasig.cas.monitor.HealthCheckMonitor">
    <property name="monitors">
      <list>
        <bean class="org.jasig.cas.monitor.MemoryMonitor"
            p:freeMemoryWarnThreshold="10" />
        <!--
          NOTE
          The following ticket registries support SessionMonitor:
            * DefaultTicketRegistry
            * JpaTicketRegistry
          Remove this monitor if you use an unsupported registry.
        -->
        <bean class="org.jasig.cas.monitor.SessionMonitor"
            p:ticketRegistry-ref="ticketRegistry"
            p:serviceTicketCountWarnThreshold="5000"
            p:sessionCountWarnThreshold="100000" />
      </list>
    </property>
  </bean>
</beans>
