<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
	default-lazy-init="true">
	
	<import resource="classpath:spring-cas-configuration/**.xml" />

	<!-- Hibernate Dynamic SessionFactory -->
	<bean id="casDynamicDataSource" class="com.ammob.communication.core.util.RoutingDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="dataSource" value-ref="dataSource" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource" />
	</bean>

	<!-- Hibernate SessionFactory -->
	<bean id="casSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		destroy-method="destroy">
		<property name="dataSource" ref="casDynamicDataSource" />
		<property name="configLocation" value="classpath:cas.hibernate.cfg.xml" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.query.substitutions">true 'Y', false 'N'</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<!-- Hibernate Search index directory -->
				<prop key="hibernate.search.default.indexBase">${hibernate.search.default.indexBase}</prop>
				<!-- <prop key="hibernate.current_session_context_class">thread</prop> --><!-- thread, jta -->
			</props>
			<!-- Turn batching off for better error messages under PostgreSQL -->
			<!-- hibernate.jdbc.batch_size=0 -->
		</property>
	</bean>

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative 
		to JTA) -->
	<bean id="casTransactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="casSessionFactory" />
	</bean>
	<!-- Fix cas transaction bug -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="casSessionFactory"/>
    </bean>
    
	<tx:annotation-driven transaction-manager="casTransactionManager" />
	
	<!-- Activates scanning of @Repository and @Service -->
	<context:component-scan base-package="com.ammob.communication.cas.dao" />
	<!-- Activates scanning of @Service -->
	<context:component-scan base-package="com.ammob.communication.cas.service" />

	<!-- Add new DAOs here -->

	<!-- Add new Managers here -->
	
	<!-- Enable @Transactional support -->
	<tx:advice id="casAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" no-rollback-for="UsernameNotFoundException"/>
        </tx:attributes>
    </tx:advice>
</beans>
